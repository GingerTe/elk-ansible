---

version: '3.2'

services:
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:{{ es_version }}"
    restart: always
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "{{ es_port }}:9200"
    env_file:
      - ./.env
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    networks:
      - elk

  logstash:
    image: "docker.elastic.co/logstash/logstash:{{ logstash_version }}"
    restart: always
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "{{ logstash_port }}:5044"
    env_file:
      - ./.env
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: "docker.elastic.co/kibana/kibana:{{ kibana_version }}"
    restart: always
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "{{ kibana_port }}:5601"
    env_file:
      - ./.env
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
